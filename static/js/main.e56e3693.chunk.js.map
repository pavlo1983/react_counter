{"version":3,"sources":["components/Counter.jsx","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","type","onClick","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACrB,oCACE,6CAAeH,IACf,4BACEI,KAAK,SACLC,QAASJ,GAFX,WAMA,4BACEG,KAAK,SACLC,QAASH,GAFX,WAMA,4BACEE,KAAK,SACLC,QAASF,GAFX,eCsBWG,E,4MAnCbC,MAAQ,CACNP,MAAO,G,EAGTC,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CACtBP,MAAOO,EAAMP,MAAQ,O,EAIzBE,OAAS,WACP,EAAKM,UAAS,SAAAD,GAAK,MAAK,CACtBP,MAAOO,EAAMP,MAAQ,S,EAIzBG,SAAW,WACT,EAAKK,SAAS,EAAKP,QACf,EAAKM,MAAMP,MAAQ,IAAM,GAC3B,EAAKQ,SAAS,EAAKN,S,4CAIvB,WACE,OACE,kBAAC,EAAD,CACEF,MAAOS,KAAKF,MAAMP,MAClBC,OAAQQ,KAAKR,OACbC,OAAQO,KAAKP,OACbC,SAAUM,KAAKN,e,GA9BLO,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e56e3693.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({ count, addOne, add100, increase }) => (\n  <>\n    <h1>{`Count: ${count}`}</h1>\n    <button\n      type=\"button\"\n      onClick={addOne}\n    >\n      Add one\n    </button>\n    <button\n      type=\"button\"\n      onClick={add100}\n    >\n      Add 100\n    </button>\n    <button\n      type=\"button\"\n      onClick={increase}\n    >\n      Increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      count: state.count + 100,\n    }));\n  };;\n\n  increase = () => {\n    this.setState(this.addOne);\n    if (this.state.count % 5 === 0) {\n      this.setState(this.add100);\n    }\n  };\n\n  render() {\n    return (\n      <Counter\n        count={this.state.count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}